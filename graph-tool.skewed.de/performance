<!DOCTYPE html>
<html lang="en">
    <head>
        
        <meta charset="utf-8">
        <!-- <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> -->
        <title>Performance Comparison - graph-tool: Efficent network analysis with python</title>
        <meta name="description" content="graph-tool: Efficent network analysis with python">
        <meta name="keywords" content="graph, network, python, python module, python library, efficient, metaprogramming" />
        <meta name="author" content="Tiago de Paula Peixoto <tiago@skewed.de>">
        <meta name="HandheldFriendly" content="True">
        <meta name="MobileOptimized" content="320">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
        <link rel="shortcut icon" href="img/graph-icon.png" type="image/png" />
        <link rel="icon" href="img/graph-icon.png" type="image/png" />
        <link rel="apple-touch-icon-precomposed" href="img/touch-icon.57.png">
        <link rel="apple-touch-icon-precomposed" sizes="72x72" href="img/touch-icon.72.png">
        <link rel="apple-touch-icon-precomposed" sizes="114x114" href="img/touch-icon.114.png">
        <link rel="apple-touch-startup-image" href="img/splash.320x460.png"
        media="screen and (min-device-width: 200px) and (max-device-width: 320px) and (orientation:portrait)">
        <link rel="apple-touch-startup-image" href="img/splash.768x1004.png"
        media="screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation:portrait)">
        <link rel="apple-touch-startup-image" href="img/splash.1024x748.png"
        media="screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation:landscape)">
        <link rel="stylesheet" type="text/css" href="css/ink.css">
        <link rel="stylesheet" type="text/css" href="css/custom.css">
        <link href="https://plus.google.com/u/0/b/113703414224138555067/" rel="publisher" />
        <link href='http://fonts.googleapis.com/css?family=Droid+Sans|Droid+Sans+Mono|Droid+Serif:400,400italic,700,700italic' rel='stylesheet' type='text/css'>

        <!--[if IE 7 ]>
            <link rel="stylesheet" href="../css/ink-ie7.css" type="text/css" media="screen" title="no title" charset="utf-8">
        <![endif]-->
        
        <script type="text/javascript" src="js/holder.js"></script>
        <script type="text/javascript" src="js/ink.min.js"></script>
        <script type="text/javascript" src="js/ink-ui.min.js"></script>
        <script type="text/javascript" src="js/autoload.js"></script>
        <script type="text/javascript" src="js/html5shiv.js"></script>
        
        <style type="text/css">
           body {
            background: #ededed;
           }
           header {
            padding: 2em 0;
            margin-bottom: 2em;
           }
           header h1 {
            font-size: 2em;
           }
           header h1 small:before  {
                content: "|";
                margin: 0 0.5em;
                font-size: 1.6em;
           }
           footer {
            background: #ccc;
            color: #0003;
           }
           footer p {
            padding: 0.5em 1em 0.5em 0;
            margin: 0;        
           }

           .ink-navigation ul.menu.horizontal iframe {
            vertical-align: bottom;
           }
        </style>

        <script type="text/x-mathjax-config">
            MathJax.Hub.Config({
                extensions: ["tex2jax.js", "mml2jax.js"],
                jax: ["input/TeX", "input/MathML", "output/HTML-CSS"],
                tex2jax: {
                    inlineMath: [ ['$','$'], ["\\(","\\)"] ],
                    displayMath: [ ['$$','$$'], ["\\[","\\]"] ],
                },
                "HTML-CSS": { availableFonts: ["TeX"] }
            });
        </script>
        <script type="text/javascript" src="static/doc/_static/MathJax/MathJax.js">
        </script>
        
        
    </head>
    
    <body>
        <div class="ink-grid">
            <header>
              
                <h1 class="pull-left medium-100 small-100" style="font-weight: normal;">
                  <span style="white-space:nowrap;"><a href="index.html"><img src="img/logo-simple.png" alt="logo" style="margin-right: 9px" /></a>graph-tool</span><small>Efficient network analysis</small>
                </h1>
                <nav class="ink-navigation pull-right medium-100 small-100">
                    <ul class="menu horizontal black shadowed">
                        <li class="active"><a href="download">Download</a></li>
                        <li><a href="http://graph-tool.skewed.de/doc">Documentation</a></li>
                        <li><a href="mailing">Mailing List</a></li>
                        <li><a href="git">Git</a></li>
                        <li><a href="issues">Issues</a></li>
                    </ul>
                </nav>             
              
            </header>

            

<h1>Graph-tool performance comparison</h1>

<p>This page shows a succinct performance comparison between graph-tool
and two other popular graph libraries with Python bindings,
<a href="http://igraph.sourceforge.net/">igraph</a>
and <a href="http://networkx.github.com/">NetworkX</a>.  NetworkX is a
pure-python implementation, whereas igraph is implemented in C. Here we
select a few representative algorithms which are implemented in all
three libraries, and test them on the same graph.
</p>

<p>
The graph used here is the strongly connected component of the
<a href="http://en.wikipedia.org/wiki/Web_of_trust">PGP web of trust
network</a> circa November 2009.  It is a directed graph, with N=39,796
vertices and E=301,498 edges. The network, test scripts and raw outputs
can be downloaded at the bottom of the page.
</p>

<p>
For this test we used graph-tool 2.11, igraph 0.7.1 and NetworkX 1.10.
</p>

<p>
The functions were called several times, and the <strong>average time
taken per function call</strong> was computed and shown below. All
results are for the same
<a href="http://ark.intel.com/products/85214/Intel-Core-i7-5500U-Processor-4M-Cache-up-to-3_00-GHz">Intel(R)
Core(TM) i7-5500U CPU @ 2.40GHz</a> with 4 cores. In the second column
are shown the results for graph-tool
with <a href="http://en.wikipedia.org/wiki/OpenMP">OpenMP</a> enabled
using 4 threads, and the third column shows the results using only one
core.
</p>
<div class="box">
<table class="ink-table alternating hover">
<tr><th style="text-align: left">Algorithm                  </th><th style="text-align: center">       graph-tool (4 cores)      </th><th style="text-align: center">       graph-tool (1 core)     </th><th style="text-align: center">        igraph          </th><th style="text-align: center">       NetworkX            
</th></tr><tr><td style="text-align: left">Single-source shortest path  </td><td style="text-align: center">        0.004 s                  </td><td style="text-align: center">    0.004 s             </td><td style="text-align: center">    0.012 s               </td><td style="text-align: center">   0.152 s                   
</td></tr><tr><td style="text-align: left">PageRank                    </td><td style="text-align: center">        0.029 s                   </td><td style="text-align: center">    0.045  s             </td><td style="text-align: center">   0.093 s               </td><td style="text-align: center">   3.949 s                   
</td></tr><tr><td style="text-align: left">K-core                       </td><td style="text-align: center">        0.014 s                  </td><td style="text-align: center">    0.014 s             </td><td style="text-align: center">    0.022 s              </td><td style="text-align: center">   0.714 s                  
</td></tr><tr><td style="text-align: left">Minimum spanning tree        </td><td style="text-align: center">        0.040 s                  </td><td style="text-align: center">    0.031 s             </td><td style="text-align: center">    0.044 s              </td><td style="text-align: center">   2.045 s                   
</td></tr><tr><td style="text-align: left">Betweenness                  </td><td style="text-align: center">        244.3 s (~4.1 mins)       </td><td style="text-align: center">    601.2 s (~10 mins) </td><td style="text-align: center">    946.8 s (edge) <br/>+ 353.9 s (vertex) <br/>(~ 21.6 mins) </td><td style="text-align: center">   32676.4 s (edge) </br> 22650.4 s (vertex) <br/>(~15.4 hours) 
</td></tr></table>
</div>
<p>
Both graph-tool and igraph seem to deliver overall comparable
performance, at least when OpenMP is disabled. However, even in this
case graph-tool seems to be slightly faster systematically.
</p>
<p>
As expected, graph-tool becomes faster by a constant factor when OpenMP
is enabled on algorithms which run in parallel (PageRank and
Betweenness), and thus beats igraph in these cases by a significant
margin, which would increase even further in a machine with more cores.
</p>
<p>
NetworkX, on the other hand, comes at a distant third with running times
in the order of <strong>20 to 170 times slower</strong> than
graph-tool. This is mostly due to its pure Python implementation, which
is known in general to be substantially slower than C/C++
(see <a href="http://wiki.scipy.org/PerformancePython">here</a>, <a href="http://julialang.org/benchmarks/">here</a>
and
 <a href="https://benchmarksgame.alioth.debian.org/u64/which-programs-are-fastest.html">here</a> for further comparisons).
</p>
<p>
One must remember that performance alone is not the only issue which
should be considered. All these libraries have their own advantages and
disadvantages, which need to be considered in detail when deciding what
is the best library to use. Here are a couple of important facts:
</p>
<ul class="icons-ul">
  <li><i class="icon-li icon-arrow-right"></i>Graph-tool's performance
  comes at the cost of increased time and memory required during
  compilation. This is mostly due to the
  in-place <a href="doc/quickstart.html#graph-filtering">graph
  filtering</a> functionality that the library provides, which none of
  the others do. Nevertheless, if one is using an operating system for
  which no <a href="download#packages">pre-compiled binaries</a> are
  available, this is an extra burden which the user should
  consider.</li>  <li><i class="icon-li icon-arrow-right"></i>The igraph
  library requires less resources for compilation, and comes with
  additional bindings for the R and C languages which the other two
  lack.</li>  <li><i class="icon-li icon-arrow-right"></i>NetworkX is
  comparatively very inefficient, but it is trivial to install ---
  requiring no compilation at all, since it is pure python. Thus one can
  get started with very little to no effort. The speed may not be a
  problem if one is dealing with very small graphs, and does not care if
  an algorithm runs in, say, 1 or 30 seconds.  However, if the graph
  size increases to hundreds of thousands, or millions of
  vertices/edges, this difference can scale up quickly.</li>
</ul>
<p>
Additionally, these libraries have different APIs and handle things
slightly differently, and they may appeal to different user
tastes. Furthermore the set of algorithms which is implemented is not
identical. For instance, graph-tool has <a href="doc/quickstart.html#graph-filtering">graph filtering</a>,  more extensive <a href="doc/flow.html">flow algorithms</a>, <a href="doc/community.html#stochastic-blockmodel-inference">stochastic blockmodel inference</a>,
and  <a href="doc/draw.html#id8">interactive graph drawing</a>, to name a few unique features. However, both NetworkX and igraph have their own unique features and algorithms which graph-tool currently lacks, and a detailed point-for-point comparison it is out of the scope of this brief analysis. In the end, it is up to the user to make a more detailed comparison and decide what is more appropriate.
</p>


<h3>Benchmark sources & outputs</h3>


<p>Source Network: <a href="static/performance/pgp.xml.gz">pgp.xml.gz</a>,
"The strongly connected component of the PGP network circa 2009."

<p>Graph-tool benchmark script: <a href="static/performance/gt_bench.py">gt_bench.py</a>, benchmark outputs: <a href="static/performance/gt_bench.out">gt_bench.out</a>, <a href="static/performance/gt_bench-single.out">gt_bench-single.out</a>

<p>igraph benchmark script: <a href="static/performance/igraph_bench.py">igraph_bench.py</a>, benchmark output: <a href="static/performance/igraph_bench.out">igraph_bench.out</a>

<p>nx benchmark script: <a href="static/performance/nx_bench.py">nx_bench.py</a>, benchmark output: <a href="static/performance/nx_bench.out">nx_bench.out</a>

<p> This page was last updated on 27 Oct 2015.



        </div>
        <footer>
        
        <div class="ink-grid">
            <nav class="ink-navigation push-left medium-100 small-100 small-push-left">
                <ul class="menu horizontal">
                    <li class="active"><a href="https://plus.google.com/u/0/b/113703414224138555067/?prsrc=3" style="text-decoration: none; padding-right:1em"><img src="https://ssl.gstatic.com/images/icons/gplus-32.png" width="32" height="32" alt="g+" style="border: 0;"/></a></li>
                    <li><a href="https://www.python.org"><img src="img/python-powered.png" alt="python powered"></a></li>
                    <li><a href="https://www.gnu.org/licenses/gpl-3.0.html"><img src="img/gplv3-88x31.png" alt="glpv3" /></a></li>
                    <li><a href="https://validator.w3.org/check?uri=referer"><img src="img/HTML5_Badge_32.png" alt="html5"/></a></li>
                </ul>
            </nav>
            <p class="push-right small-100">by <a href="http://skewed.de/tiago">Tiago P. Peixoto</a></p>
        </div>
        
        </footer>
    </body>
</html>